package com.mlh.model;

import java.util.Date;
import java.util.List;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.mlh.buss.content.bean.ContentInfo;
import com.mlh.model.base.BaseContent;
import com.mlh.utils.common.StringKit;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Content extends BaseContent<Content> {
	public static final Content dao = new Content();

	public boolean save(ContentInfo info, String detailId, String source, String code) {
		boolean result = false;
		
		String cid = info.getCid();
		Content bean = new Content();
		bean.setId(StringKit.getUUID());
		bean.setCid(cid);
		bean.setTitle(info.getTitle());
		bean.setMidiameter(info.getMidiameter());
		bean.setHeight(info.getHeight());
		bean.setCrown(info.getCrown());
		bean.setGrounddiameter(info.getGrounddiameter());
		bean.setUnit(info.getUnit());
		bean.setPrice(info.getPrice());
		bean.setRemark(info.getRemark());
		bean.setCompany(info.getCompany());
		bean.setProvince(info.getProvince());
		bean.setCity(info.getCity());
		bean.setContacts(info.getContacts());
		bean.setTel(info.getTel());
		bean.setFax(info.getFax());
		bean.setEmail(info.getEmail());
		bean.setWebsite(info.getWebsite());
		bean.setAddress(info.getAddress());
		bean.setZipcode(info.getZipcode());
		bean.setReleasetime(info.getReleasetime());
		bean.setDetailId(detailId);
		bean.setSource(source);
		bean.setCode(code);
		bean.setCreateTime(new Date());
		bean.setUpdateTime(new Date());
		
		deleteByCId(cid);
		result = bean.save();
		
		return result;
	}
	
	public void deleteByCId(String cid) {
		Db.update("delete from t_content where cid = ?", cid);
	}

	
	public Page<Content> paginate(int pageNumber, int pageSize, String buildsql) {
		StringBuffer sql = new StringBuffer();
		sql.append("from t_content");
		sql.append(buildsql);
		sql.append("order by createTime asc");
		
		return paginate(pageNumber, pageSize, "select *", sql.toString());
	}
	
	public List<Content> findByCodeAndTime(String code,Date updateTime){
		String sql = "SELECT id,title,(SELECT name FROM good_standard_name WHERE locate(content.title,alias)>0 LIMIT 1) as breedName,"
					 +"midiameter,height,crown,grounddiameter,price,company,CONCAT(province,city) as area,contacts,tel,source,createTime,updateTime,"
				     +"(SELECT areaNo FROM t_area WHERE locate(content.province,areaName) > 0 LIMIT 1) as areaNo "
				     +"FROM t_content content WHERE content.`code`=? AND createTime >= ?";
		return dao.find(sql, code, updateTime);
	}
}
